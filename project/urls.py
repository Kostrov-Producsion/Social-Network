from django.urls import path
from django.contrib.auth.decorators import login_required
from .views import (
    StartPage, LoginFormView, LogoutView, RegisterView, PersonView,
    DialogView, MessageView, CreateMessageView, UpdateMessageView, DeleteMessageView,
    PostPersonView, PostCommentView, PostLikeView, PostUpdateCommentView, DeleteCommentView,
    PersonFriendsView, PersonCreateFriendsView, PersonConfirmationFriendsView, PersonDeleteFriendView,
    SearchFriendView, PostDeleteView, PostRePostObjectView, PhotosPersonView,
    CreateAlbumPersonView, DetailAlbumPersonView, CreatePhotoPersonView, CreatePhotoInAlbumPersonView,
    AlbumAllPersonView, PhotoLikeView, PhotoCommentView, PhotoUpdateCommentView,
    PhotoRePostObjectView, PhotoDeleteView, AlbumDeleteView,
    PersonAvatarView, PersonSettingsProfileView, AddPhoto, AudioPersonView, ColorDeterminantView,
    AudioSerializersView, AlbumAudioTrackSerializers, AddAudio, AudioDeleteView, AudioSearchView, CreateAudioPersonView,
    PersonVideoDetailView, PersonCreateVideoView, VideoCommentView, VideoCommentUpdateView, VideoLikeView,
    PersonDeleteVideoView, VideoRePostObjectPersonView, AddVideo, VideoSearchPersonView, PersonUpdateView, PermissionSettingsView,
    GroupListView, GroupCreateView, GroupDetailView, GroupCreateFollowers, GroupRemoveFollowers, GroupSearchView,
    GroupsPostCreateView, PhotosGroupView, GroupSettingsProfileView, GroupAvatarView, GroupUpdateView, CreatePhotoGroupView,
    CreatePhotoInAlbumGroupView, DetailAlbumGroupView, AlbumAllGroupView, CreateAlbumGroupView, AudioGroupView,
    CreateAudioGroupView, GroupVideoDetailView, GroupCreateVideoView, NewsFeed, UnreadMessagesView,
    PossibleFriendsView, RequestMessageUserView, RequestMessageFriendView, RequestAvatarView,
    RequestCommentPhotoView, RequestCommentPostView, RequestCommentVideoView, RequestPostView, MediaMenu
)

# указываем по каким адресам использовать наши методы реализации полученных данных
# для защиты от просмотра страниц незарегестрированных пользователей оборачиваем методы в метод login_required, в котором указываем адрес перенаправления в случае попытки доступа к странице
urlpatterns = [
    path('', StartPage, name='start_page.url'),
    path('register/', RegisterView.as_view(), name='register_user_url'),
    path('login/', LoginFormView.as_view(), name='login_url'),
    path('logout/', login_required(LogoutView.as_view(), login_url='login_url'), name='logout_url'),
    path('menu/', login_required(MediaMenu, login_url='login_url'), name='menu_media_url'),
    path('addPhoto/', login_required(AddPhoto, login_url='login_url'), name='add_photo_url'),
    path('addAudio/', login_required(AddAudio, login_url='login_url'), name='add_audio_url'),
    path('addVideo/', login_required(AddVideo, login_url='login_url'), name='add_video_url'),
    path('color/', login_required(ColorDeterminantView.as_view(), login_url='login_url'), name='color_determinate_url'),
    path('unreadMessages/', login_required(UnreadMessagesView.as_view(), login_url='login_url'), name='unread_messages'),
    path('possibleFriends/', login_required(PossibleFriendsView.as_view(), login_url='login_url'), name='possible_friends'),
    path('requestMessage/User/', login_required(RequestMessageUserView.as_view(), login_url='login_url'), name='request_message_url'),
    path('requestMessage/Friend/', login_required(RequestMessageFriendView.as_view(), login_url='login_url'), name='request_message_url'),
    path('requestAvatar/', login_required(RequestAvatarView.as_view(), login_url='login_url'), name='request_avatar_url'),
    path('requestPost/', login_required(RequestPostView.as_view(), login_url='login_url'), name='request_post_url'),
    path('requestComment/Photos/', login_required(RequestCommentPhotoView.as_view(), login_url='login_url'), name='request_comment_photo_url'),
    path('requestComment/Video/', login_required(RequestCommentVideoView.as_view(), login_url='login_url'), name='request_comment_video_url'),
    path('requestComment/Post/', login_required(RequestCommentPostView.as_view(), login_url='login_url'), name='request_comment_post_url'),
    path('followers/create/', login_required(GroupCreateFollowers.as_view(), login_url='login_url'), name='create_followers_group_url'),
    path('followers/delete/', login_required(GroupRemoveFollowers.as_view(), login_url='login_url'), name='delete_followers_group_url'),
    path('permission/', login_required(PermissionSettingsView.as_view(), login_url='login_url'), name='permission_url'),
    path('serializers/Audio/', login_required(AudioSerializersView.as_view(), login_url='login_url'), name='audio_serializers_url'),
    path('serializers/AlbumAudioTrack/', login_required(AlbumAudioTrackSerializers.as_view(), login_url='login_url'), name='search_album_audio_track_url'),
    path('search/Friends/', login_required(SearchFriendView.as_view(), login_url='login_url'), name='search_friend_url'),
    path('search/Audios/', login_required(AudioSearchView.as_view(), login_url='login_url'), name='search_audio_url'),
    path('search/Video/', login_required(VideoSearchPersonView.as_view(), login_url='login_url'), name='search_video_url'),
    path('search/Groups/', login_required(GroupSearchView.as_view(), login_url='login_url'), name='search_group_url'),
    path('Post/Create/', login_required(PostPersonView.as_view(), login_url='login_url'), name='person_post_url'),
    path('Post/Create/Group/', login_required(GroupsPostCreateView.as_view(), login_url='login_url'), name='group_post_create_url'),
    path('Post/Like/', login_required(PostLikeView.as_view(), login_url='login_url'), name='post_like_url'),
    path('Photos/Like/', login_required(PhotoLikeView.as_view(), login_url='login_url'), name='photo_like_url'),
    path('Video/Like/', login_required(VideoLikeView.as_view(), login_url='login_url'), name='video_like_url'),
    path('Post/RePost/', login_required(PostRePostObjectView.as_view(), login_url='login_url'), name='post_re_post_url'),
    path('Photos/RePost/', login_required(PhotoRePostObjectView.as_view(), login_url='login_url'), name='photo_re_post_url'),
    path('Video/RePost/', login_required(VideoRePostObjectPersonView.as_view(), login_url='login_url'), name='video_re_post_url'),
    path('Photos/Delete/', login_required(PhotoDeleteView.as_view(), login_url='login_url'), name='photo_delete_url'),
    path('Album/Delete/', login_required(AlbumDeleteView.as_view(), login_url='login_url'), name='album_delete_url'),
    path('Audio/Delete/', login_required(AudioDeleteView.as_view(), login_url='login_url'), name='person_audio_delete_url'),
    path('Video/Delete/', login_required(PersonDeleteVideoView.as_view(), login_url='login_url'), name='person_video_delete_url'),
    path('Post/Delete/', login_required(PostDeleteView.as_view(), login_url='login_url'), name='post_delete_url'),
    path('Comment/Delete/', login_required(DeleteCommentView.as_view(), login_url='login_url'), name='comment_delete_url'),
    path('person/<str:slug>/', login_required(PersonView.as_view(), login_url='login_url'), name='person_url'),
    path('person/<str:slug>/NewsFeed/', login_required(NewsFeed.as_view(), login_url='login_url'), name='person_news_feed_url'),
    path('person/<str:slug>/Settings/', login_required(PersonSettingsProfileView.as_view(), login_url='login_url'), name='person_settings_url'),
    path('person/<str:slug>/Settings/Avatar/', login_required(PersonAvatarView.as_view(), login_url='login_url'), name='person_avatar_url'),
    path('person/<str:slug>/Settings/Update/', login_required(PersonUpdateView.as_view(), login_url='login_url'), name='person_update_url'),
    path('person/<str:pk>/MessageUser/', login_required(CreateMessageView.as_view(), login_url='login_url'), name='message_user_url'),
    path('person/<str:id>/Post/Comment/', login_required(PostCommentView.as_view(), login_url='login_url'), name='post_comment_url'),
    path('person/<str:id>/Post/Comment/Update/', login_required(PostUpdateCommentView.as_view(), login_url='login_url'), name='post_comment_update_url'),
    path('person/<str:slug>/Friends/', login_required(PersonFriendsView.as_view(), login_url='login_url'), name='person_friends_url'),
    path('person/<str:slug>/Friends/Create/', login_required(PersonCreateFriendsView.as_view(), login_url='login_url'), name='create_friend_url'),
    path('person/<str:slug>/Friends/Confirmation/', login_required(PersonConfirmationFriendsView.as_view(), login_url='login_url'), name='confirmation_friend_url'),
    path('person/<str:slug>/Friends/Delete/', login_required(PersonDeleteFriendView.as_view(), login_url='login_url'), name='delete_friend_url'),
    path('person/<str:slug>/Photos/', login_required(PhotosPersonView.as_view(), login_url='login_url'), name='person_photos_url'),
    path('person/<str:id>/Photos/Comment/', login_required(PhotoCommentView.as_view(), login_url='login_url'), name='photo_comment_url'),
    path('person/<str:id>/Photos/Comment/Update/', login_required(PhotoUpdateCommentView.as_view(), login_url='login_url'), name='photo_comment_update_url'),
    path('person/<str:slug>/Photos/Create/', login_required(CreatePhotoPersonView.as_view(), login_url='login_url'), name='person_photos_create_url'),
    path('person/<str:slug>/Photos/CreateInAlbum/', login_required(CreatePhotoInAlbumPersonView.as_view(), login_url='login_url'), name='person_create_photo_in_album_url'),
    path('person/<str:slug>/Album/list/', login_required(AlbumAllPersonView.as_view(), login_url='login_url'), name='person_album_all_url'),
    path('person/<str:slug>/Album/Create/', login_required(CreateAlbumPersonView.as_view(), login_url='login_url'), name='person_create_album_url'),
    path('person/<str:slug>/<str:id>/Album/Detail/', login_required(DetailAlbumPersonView.as_view(), login_url='login_url'), name='person_album_detail_url'),
    path('person/<str:slug>/Audio/', login_required(AudioPersonView.as_view(), login_url='login_url'), name='person_audio_url'),
    path('person/<str:slug>/Audio/Create/', login_required(CreateAudioPersonView.as_view(), login_url='login_url'), name='person_audio_create_url'),
    path('person/<str:slug>/Video/', login_required(PersonVideoDetailView.as_view(), login_url='login_url'), name='person_video_url'),
    path('person/<str:slug>/Video/Create/', login_required(PersonCreateVideoView.as_view(), login_url='login_url'), name='person_video_create_url'),
    path('person/<str:id>/Video/Comment/', login_required(VideoCommentView.as_view(), login_url='login_url'), name='video_comment_url'),
    path('person/<str:id>/Video/Comment/Update/', login_required(VideoCommentUpdateView.as_view(), login_url='login_url'), name='video_comment_update_url'),
    path('groups/Create/', login_required(GroupCreateView.as_view(), login_url='login_url'), name='group_create_url'),
    path('groups/<str:slug>/', login_required(GroupListView.as_view(), login_url='login_url'), name='list_groups_url'),
    path('groups/<str:slug>/Detail/', login_required(GroupDetailView.as_view(), login_url='login_url'), name='group_detail_url'),
    path('groups/<str:slug>/Settings/', login_required(GroupSettingsProfileView.as_view(), login_url='login_url'), name='group_settings_url'),
    path('groups/<str:slug>/Settings/Avatar/', login_required(GroupAvatarView.as_view(), login_url='login_url'), name='group_avatar_url'),
    path('groups/<str:slug>/Settings/Update/', login_required(GroupUpdateView.as_view(), login_url='login_url'), name='group_update_url'),
    path('groups/<str:slug>/Photos/', login_required(PhotosGroupView.as_view(), login_url='login_url'), name='group_photo_url'),
    path('groups/<str:slug>/Photos/Create/', login_required(CreatePhotoGroupView.as_view(), login_url='login_url'), name='group_photos_create_url'),
    path('groups/<str:slug>/Photos/CreateInAlbum/', login_required(CreatePhotoInAlbumGroupView.as_view(), login_url='login_url'), name='group_create_photo_in_album_url'),
    path('groups/<str:slug>/Album/list/', login_required(AlbumAllGroupView.as_view(), login_url='login_url'), name='group_album_all_url'),
    path('groups/<str:slug>/Album/Create/', login_required(CreateAlbumGroupView.as_view(), login_url='login_url'), name='group_create_album_url'),
    path('groups/<str:slug>/<str:id>/Album/Detail/', login_required(DetailAlbumGroupView.as_view(), login_url='login_url'), name='group_album_detail_url'),
    path('groups/<str:slug>/Audio/', login_required(AudioGroupView.as_view(), login_url='login_url'), name='group_audio_url'),
    path('groups/<str:slug>/Audio/Create/', login_required(CreateAudioGroupView.as_view(), login_url='login_url'), name='group_audio_create_url'),
    path('groups/<str:slug>/Video/', login_required(GroupVideoDetailView.as_view(), login_url='login_url'), name='group_video_url'),
    path('groups/<str:slug>/Video/Create/', login_required(GroupCreateVideoView.as_view(), login_url='login_url'), name='group_video_create_url'),
    path('dialogs/', login_required(DialogView.as_view(), login_url='login_url'), name='chat_url'),
    path('dialogs/<str:chat_id>/', login_required(MessageView.as_view(), login_url='login_url'), name='message_url'),
    path('dialogs/<str:chat_id>/updateMessage/', login_required(UpdateMessageView.as_view(), login_url='login_url'), name='update_message_url'),
    path('dialogs/<str:chat_id>/deleteMessage/', login_required(DeleteMessageView.as_view(), login_url='login_url'), name='delete_message_url'),
]
